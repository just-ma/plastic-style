type Review @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  reviewId: ID!
  title: String!
  artist: String!
  recordLabel: String
  content: String!
  image: String!
  author: String!
  createdAt: Int!
  updatedAt: AWSDateTime
}

type Feature @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  featureId: ID!
  title: String!
  description: String
  author: String
  image: String!
  content: String!
  createdAt: Int!
  updatedAt: AWSDateTime
}

type ListItem @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  listItemId: ID!
  listId: ID!
  rank: Int
  artist: String
  title: String!
  image: String
  content: String!
  createdAt: Int
  updatedAt: AWSDateTime
}

type List @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  listId: ID!
  author: String!
  title: String!
  description: String
  image: String!
  itemIds: [String!]!
  createdAt: Int!
  updatedAt: AWSDateTime
}

type PodcastEpisode @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  episodeId: ID!
  podcastId: ID!
  title: String!
  description: String
  image: String
  link: String
  author: String
  createdAt: Int
  updatedAt: AWSDateTime
}

type PodcastSeason @model @auth(rules: [{ allow: public, operations: [read] }, { allow: private, operations: [read, create, update, delete] }]) {
  id: ID!
  podcastId: ID!
  title: String!
  seasonLabel: String
  description: String
  author: String!
  image: String!
  year: Int
  episodeIds: [String!]!
  createdAt: Int
  updatedAt: AWSDateTime
}
